package com.orientatua;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.os.Bundle;
import android.speech.RecognitionListener;
import android.speech.RecognitionService;
import android.speech.RecognizerIntent;
import android.speech.SpeechRecognizer;
import android.speech.tts.TextToSpeech;
import android.speech.tts.TextToSpeech.OnInitListener;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

public class VoiceManager extends Activity  {
	private static VoiceManager instance;
	private SpeechRecognizer recognizer;
	private TextToSpeech speaker;
	private Context context;
	
	private static final int REQUEST_CODE = 1234;
	
	private VoiceManager(Context _context) {
		//Inicializamos el speaker, con idioma espa�ol					
		context=_context;	
		
		speaker=new TextToSpeech(context,new OnInitListener() {
			
			@Override
			public void onInit(int status) {
				Locale lang = Locale.getDefault();
				//int result=//tts.setLanguage(lang);		
				
				if (status == TextToSpeech.SUCCESS) {
					speaker.setLanguage(Locale.getDefault());
					
					//speaker.speak("Bienvenido, ¿qué desea hacer?", TextToSpeech.QUEUE_FLUSH, null);	
					//startVoiceRecognitionActivity(0);	
				}
				else
					Toast.makeText( context, "Error al inicializar TextToSpeech", Toast.LENGTH_SHORT ).show();
				
			}
		});
	    recognizer=SpeechRecognizer.createSpeechRecognizer(context);
		recognizer.setRecognitionListener(new Listener());	
		
	 }
			
	public static VoiceManager getInstance(Context _context) {
		if(instance==null)
			instance=new VoiceManager(_context);
		return instance;
	}
	
	public void speak(String message) {
		speaker.speak(message, TextToSpeech.QUEUE_FLUSH, null);
	}
	
	public void waitSpeaking() {
		boolean speaking;
		do {
			speaking=speaker.isSpeaking();
		} while(speaking);
	}
	
	
	public void startVoiceRecognition()
	{
		waitSpeaking();
		Toast.makeText( context, "Start", Toast.LENGTH_SHORT ).show();
		Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
	    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
	    intent.putExtra(RecognizerIntent.EXTRA_PROMPT, "Voice recognition Demo...");
	    recognizer.startListening(intent);
	}

	
	
	/*@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data)
	{
		Toast.makeText(getApplicationContext(), "Dentro", Toast.LENGTH_LONG).show();
	    if (requestCode == REQUEST_CODE && resultCode == RESULT_OK)
	    {
	        // Populate the wordsList with the String values the recognition engine thought it heard
	        ArrayList<String> matches = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
	        //wordsList.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,matches));	     
	        
	        for(String word: matches) {	        	
	        	if(word.toLowerCase(Locale.getDefault()).contains("donde estoy"))
	        		speaker.speak("¿Dónde estoy?", TextToSpeech.QUEUE_FLUSH, null);
	        		//getCurrentLocation();
	        	
	        	/*else if(word.toLowerCase(Locale.getDefault()).contains("ir a destino"))
	        		getRoute();
	        	
	        	else if(word.equalsIgnoreCase("Salir"))
	        		finish();*/	        	
	      /*  }
	    }
	    else {
	    	String msg="No se ha podido reconocer el destino, por favor, repita. O diga Terminar.";
	    	//tts.speak(msg, TextToSpeech.QUEUE_FLUSH, null);	    	
	    	//startVoiceRecognitionActivity();
	    }
	    
	    super.onActivityResult(requestCode, resultCode, data);	
	}*/
	class Listener implements RecognitionListener {

		@Override
		public void onReadyForSpeech(Bundle params) {		
			Toast.makeText( context, "Ready", Toast.LENGTH_SHORT ).show();
		}

		@Override
		public void onBeginningOfSpeech() {
			Toast.makeText( context, "Begin", Toast.LENGTH_SHORT ).show();
			
		}

		@Override
		public void onRmsChanged(float rmsdB) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void onBufferReceived(byte[] buffer) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void onEndOfSpeech() {		
			Toast.makeText( context, "End", Toast.LENGTH_SHORT ).show();
		}

		@Override
		public void onError(int error) {
			Toast.makeText( context, "Error", Toast.LENGTH_SHORT ).show();		
		}

		@Override
		public void onResults(Bundle results) {
			ArrayList<String> matches = results.getStringArrayList(RecognizerIntent.EXTRA_RESULTS);
			/*ListView wordsList;

	        wordsList.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,matches));*/	     
	        
	        for(String word: matches) {	        	
	        	if(word.toLowerCase(Locale.getDefault()).contains("donde estoy"))
	        		speak("Donde estoy");
	        	
	        	else if(word.toLowerCase(Locale.getDefault()).contains("ir a destino"))
	        		speak("Ruta");
	        	
	        	else if(word.equalsIgnoreCase("Salir"))
	        		finish();	 
	        }
			
		}

		@Override
		public void onPartialResults(Bundle partialResults) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void onEvent(int eventType, Bundle params) {
			// TODO Auto-generated method stub
			
		}
		
	}
}
