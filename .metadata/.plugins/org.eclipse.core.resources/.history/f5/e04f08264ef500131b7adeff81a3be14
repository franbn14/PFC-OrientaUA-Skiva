package com.orientatua;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import com.orientatua2.R;

import android.location.Address;
import android.location.Location;
import android.net.Uri;
import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.view.Menu;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.speech.RecognizerIntent;
import android.speech.tts.TextToSpeech;
import android.speech.tts.TextToSpeech.OnInitListener;
 

public class OrientatUA2 extends Activity {
	private GPSManager gps;	
	private VoiceManager manager;
	private DirectionsManager directions;
	
	private static final int REQUEST_CODE = 1234;
	private ListView wordsList;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
				
		manager=VoiceManager.getInstance(OrientatUA2.this);
		manager.speak("Bienvenido");
		manager.waitSpeaking();
		gps = new GPSManager(OrientatUA2.this);
		
		Button btSpeak=(Button)findViewById(R.id.btSpeak);			
		wordsList = (ListView) findViewById(R.id.listView1);
		
		PackageManager pm = getPackageManager();
	    List<ResolveInfo> activities = pm.queryIntentActivities(new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH), 0);
	    if (activities.size() == 0)
	    {
	        btSpeak.setEnabled(false);	        
	    	Toast.makeText(getApplicationContext(), "Servicio de micrófono desactivado", Toast.LENGTH_LONG).show();
	    	manager.speak("Micrófono desactivado");			
	    }		
	    /*else
	    	startVoiceRecognitionActivity(0);*/
	    getRoute();
	    btSpeak.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				startVoiceRecognitionActivity(0);
				
			}
		});
		//***** Fin de prueba de speechToText
	    
	    Button btExit = (Button)findViewById(R.id.btExit);
		btExit.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				finish();
				
			}
		});
	    
		Button btCurrent = (Button)findViewById(R.id.btCurrent);
		
		btCurrent.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {						
				getCurrentLocation();				
			}
		});		
	}
	
	private void startVoiceRecognitionActivity(int type) //0 general, 1 destino
	{
		manager.waitSpeaking();				
		Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
	    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
	    intent.putExtra(RecognizerIntent.EXTRA_PROMPT, "Voice recognition Demo...");
	    startActivityForResult(intent, REQUEST_CODE);	
			    
	}
	
	public void getCurrentLocation() {		
		if(gps.canGetLocation()) {
			Location current=gps.getCurrentLocation();
			
			if(current!=null) {
				double latitude = current.getLatitude();
				double longitude = current.getLongitude();
				String address="Usted se encuentra en "+gps.getAddress(latitude,longitude);
				
				Toast.makeText(getApplicationContext(), "Coordenadas: \nLatitud: " + latitude + "\nLongitud: " + longitude, Toast.LENGTH_LONG).show();
				Toast.makeText(getApplicationContext(), address, Toast.LENGTH_LONG).show();
				
				manager.speak(address);	
			}						
			else {
				//Toast.makeText(getApplicationContext(), "No se ha podido obtener la ubicación", Toast.LENGTH_LONG).show();
				manager.speak("No se ha podido obtener la ubicación");	
			}						
		}
		else
			gps.setSettings();
	}
	
	public void getRoute() {	
		directions=new DirectionsManager();
		manager.speak("Diga el destino");	
		//startVoiceRecognitionActivity(1);
		manager.waitSpeaking();
		
		float results[]= new float[3];		
		ArrayList<String> distance=new ArrayList<String>();
		String error=directions.makeRequest("Calle San Pablo 13 03690 San Vicente del Raspeig Alicante España", address.toString());
		distance.add(error);		
		/*Location current=gps.getCurrentLocation();
		//String address=gps.getAddress(gps.getCurrentLocation().getLatitude(), gps.getCurrentLocation().getLongitude());//gps.getCoordinates("Plaza Santa Faz, 03690 San Vicente del Raspeig, Alicante");
		Address address=gps.getCoordinates("Plaza Santa Faz 03690 San Vicente del Raspeig Alicante España");
		
		
		
		if(address!=null) {
			distance.add("Address ok");
			//distance.add(gps.getCurrentLocation().getLatitude()+","+gps.getCurrentLocation().getLongitude());
			distance.add(address.getLatitude()+","+address.getLongitude());
			//distance.add(gps.getAddress(current.getLatitude(), current.getLongitude()));
			Location.distanceBetween(gps.getCurrentLocation().getLatitude(), gps.getCurrentLocation().getLongitude(), address.getLatitude(), address.getLongitude(), results);			
		
			if(results!=null && results.length>0) {				
				for(int i=0; i<results.length; i++)
					distance.add(results[i]+"");		
			}		
			String error=directions.makeRequest("Calle San Pablo 13 03690 San Vicente del Raspeig Alicante España", address.toString());
			distance.add(error);
			
		}
		else
			distance.add("Address null");*/
		
		wordsList.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,distance));
	}
	
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data)
	{
	    if (requestCode == REQUEST_CODE && resultCode == RESULT_OK)
	    {	        
	        ArrayList<String> matches = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
	        wordsList.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,matches));	     
	        
	        for(String word: matches) {	        	
	        	if(word.toLowerCase(Locale.getDefault()).contains("donde estoy"))
	        		getCurrentLocation();
	        	
	        	else if(word.toLowerCase(Locale.getDefault()).contains("ir a destino"))
	        		getRoute();
	        	
	        	else if(word.equalsIgnoreCase("Salir"))
	        		finish();	        	
	        }
	    }
	    else {	    	
	    	manager.speak("No se ha podido reconocer el destino, por favor, repita. O diga Terminar.");
	    	startVoiceRecognitionActivity(1);
	    }
	    
	    super.onActivityResult(requestCode, resultCode, data);	
	}
}
